(function() {
  var PackageUpdatesStatusView, View, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('underscore-plus');

  View = require('atom').View;

  module.exports = PackageUpdatesStatusView = (function(_super) {
    __extends(PackageUpdatesStatusView, _super);

    function PackageUpdatesStatusView() {
      return PackageUpdatesStatusView.__super__.constructor.apply(this, arguments);
    }

    PackageUpdatesStatusView.content = function() {
      return this.div({
        "class": 'inline-block text text-info'
      }, (function(_this) {
        return function() {
          _this.span({
            "class": 'icon icon-package'
          });
          return _this.span({
            outlet: 'countLabel',
            "class": 'available-updates-status'
          });
        };
      })(this));
    };

    PackageUpdatesStatusView.prototype.initialize = function(statusBar, packages) {
      this.countLabel.text(packages.length);
      this.setTooltip("" + (_.pluralize(packages.length, 'package update')) + " available");
      statusBar.appendRight(this);
      return this.subscribe(this, 'click', (function(_this) {
        return function() {
          _this.trigger('settings-view:install-packages');
          _this.destroyTooltip();
          return _this.remove();
        };
      })(this));
    };

    return PackageUpdatesStatusView;

  })(View);

}).call(this);
