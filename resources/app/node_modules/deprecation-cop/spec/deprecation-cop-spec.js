(function() {
  var DeprecationCopView, WorkspaceView;

  WorkspaceView = require('atom').WorkspaceView;

  DeprecationCopView = require('../lib/deprecation-cop-view');

  describe("DeprecationCop", function() {
    var activationPromise;
    activationPromise = null;
    beforeEach(function() {
      atom.workspaceView = new WorkspaceView;
      return activationPromise = atom.packages.activatePackage('deprecation-cop');
    });
    return describe("when the deprecation-cop:view event is triggered", function() {
      return it("displayes deprecation cop pane", function() {
        expect(atom.workspace.getActivePane().getActiveItem()).not.toExist();
        atom.workspaceView.trigger('deprecation-cop:view');
        waitsForPromise(function() {
          return activationPromise;
        });
        return runs(function() {
          var timeCopView;
          timeCopView = atom.workspace.getActivePane().getActiveItem();
          return expect(timeCopView instanceof DeprecationCopView).toBeTruthy();
        });
      });
    });
  });

}).call(this);
